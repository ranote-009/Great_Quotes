{"ast":null,"code":"var _jsxFileName = \"D:\\\\Router\\\\09-time-to-practice-starting-code\\\\src\\\\pages\\\\QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Route, Link, useRouteMatch } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport { Fragment } from \"react/cjs/react.production.min\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: \"q1\",\n  author: \"Max\",\n  text: \"Learning React is Fun!\"\n}, {\n  id: \"q2\",\n  author: \"Maxi\",\n  text: \"Learning React is g!\"\n}];\n\nconst QuoteDetail = () => {\n  _s();\n\n  const match = useRouteMatch();\n  const params = useParams();\n  const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Quote Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `/quotes/${params.quoteId}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteDetail, \"rdwgqxZeilGF5b/P9rLFIDXyAnM=\", false, function () {\n  return [useRouteMatch, useParams];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["D:/Router/09-time-to-practice-starting-code/src/pages/QuoteDetail.js"],"names":["React","Route","Link","useRouteMatch","useParams","Fragment","Comments","HighlightedQuote","DUMMY_QUOTES","id","author","text","QuoteDetail","match","params","quote","find","quoteId","path"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,aAAtB,QAA2C,kBAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,QAAyB,gCAAzB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;;AACA,MAAMC,YAAY,GAAG,CACnB;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,KAApB;AAA2BC,EAAAA,IAAI,EAAE;AAAjC,CADmB,EAEnB;AAAEF,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,MAApB;AAA4BC,EAAAA,IAAI,EAAE;AAAlC,CAFmB,CAArB;;AAIA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,KAAK,GAAGV,aAAa,EAA3B;AACA,QAAMW,MAAM,GAAGV,SAAS,EAAxB;AACA,QAAMW,KAAK,GAAGP,YAAY,CAACQ,IAAb,CAAmBD,KAAD,IAAWA,KAAK,CAACN,EAAN,KAAaK,MAAM,CAACG,OAAjD,CAAd;;AACA,MAAI,CAACF,KAAL,EAAY;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEA,KAAK,CAACJ,IAA9B;AAAoC,MAAA,MAAM,EAAEI,KAAK,CAACL;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEG,KAAK,CAACK,IAAnB;AAAyB,MAAA,KAAK,MAA9B;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,EAAE,EAAG,WAAUJ,MAAM,CAACG,OAAQ,WAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAUE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEJ,KAAK,CAACK,IAAK,WAA3B;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAvBD;;GAAMN,W;UACUT,a,EACCC,S;;;KAFXQ,W;AAyBN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\r\nimport { Route, Link, useRouteMatch } from \"react-router-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Fragment } from \"react/cjs/react.production.min\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nconst DUMMY_QUOTES = [\r\n  { id: \"q1\", author: \"Max\", text: \"Learning React is Fun!\" },\r\n  { id: \"q2\", author: \"Maxi\", text: \"Learning React is g!\" },\r\n];\r\nconst QuoteDetail = () => {\r\n  const match = useRouteMatch();\r\n  const params = useParams();\r\n  const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\r\n  if (!quote) {\r\n    return <p>No Quote Found</p>;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote text={quote.text} author={quote.author} />\r\n      <Route path={match.path} exact>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`/quotes/${params.quoteId}/comments`}>\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments />\r\n      </Route>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n"]},"metadata":{},"sourceType":"module"}